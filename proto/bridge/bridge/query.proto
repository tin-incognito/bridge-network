syntax = "proto3";

package bridge.bridge;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "bridge/bridge/params.proto";
import "bridge/bridge/keygen_block.proto";
import "bridge/bridge/node_account.proto";
import "bridge/bridge/register_keygen.proto";

option go_package = "bridge/x/bridge/types";

// Query defines the gRPC querier service.
service Query {
  
  // Parameters queries the parameters of the module.
  rpc Params (QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/bridge/bridge/params";
  
  }
  
  // Queries a list of KeygenBlock items.
  rpc KeygenBlock    (QueryGetKeygenBlockRequest) returns (QueryGetKeygenBlockResponse) {
    option (google.api.http).get = "/bridge/bridge/keygen_block/{index}";
  
  }
  rpc KeygenBlockAll (QueryAllKeygenBlockRequest) returns (QueryAllKeygenBlockResponse) {
    option (google.api.http).get = "/bridge/bridge/keygen_block";
  
  }
  
  // Queries a list of NodeAccount items.
  rpc NodeAccount    (QueryGetNodeAccountRequest) returns (QueryGetNodeAccountResponse) {
    option (google.api.http).get = "/bridge/bridge/node_account/{id}";
  
  }
  rpc NodeAccountAll (QueryAllNodeAccountRequest) returns (QueryAllNodeAccountResponse) {
    option (google.api.http).get = "/bridge/bridge/node_account";
  
  }
  
  // Queries a list of RegisterKeygen items.
  rpc RegisterKeygen    (QueryGetRegisterKeygenRequest) returns (QueryGetRegisterKeygenResponse) {
    option (google.api.http).get = "/bridge/bridge/register_keygen/{index}";
  
  }
  rpc RegisterKeygenAll (QueryAllRegisterKeygenRequest) returns (QueryAllRegisterKeygenResponse) {
    option (google.api.http).get = "/bridge/bridge/register_keygen";
  
  }
}
// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetKeygenBlockRequest {
  string index = 1;
}

message QueryGetKeygenBlockResponse {
  KeygenBlock keygenBlock = 1 [(gogoproto.nullable) = false];
}

message QueryAllKeygenBlockRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllKeygenBlockResponse {
  repeated KeygenBlock                            keygenBlock = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination  = 2;
}

message QueryGetNodeAccountRequest {
  uint64 id = 1;
}

message QueryGetNodeAccountResponse {
  NodeAccount NodeAccount = 1 [(gogoproto.nullable) = false];
}

message QueryAllNodeAccountRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllNodeAccountResponse {
  repeated NodeAccount                            NodeAccount = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination  = 2;
}

message QueryGetRegisterKeygenRequest {
  string index = 1;
}

message QueryGetRegisterKeygenResponse {
  RegisterKeygen registerKeygen = 1 [(gogoproto.nullable) = false];
}

message QueryAllRegisterKeygenRequest {
  cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllRegisterKeygenResponse {
  repeated RegisterKeygen                         registerKeygen = 1 [(gogoproto.nullable) = false];
           cosmos.base.query.v1beta1.PageResponse pagination     = 2;
}

